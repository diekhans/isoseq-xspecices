#!/usr/bin/env python3

import sys
import argparse
import tempfile
import shutil
from pycbio.sys import fileOps
import pipettor

def parseArgs():
    usage = """build a bigBed file from one or more inputs, doing various
    edits and cleanup"""
    parser = argparse.ArgumentParser(description=usage)
    parser.add_argument('--keep', action="store_true")
    parser.add_argument('--as', dest="asFile")
    parser.add_argument('--extraIndex')
    parser.add_argument('--bedType', default="bed12")
    parser.add_argument('hgdb')
    parser.add_argument('bigBedOut')
    parser.add_argument('inBeds', nargs='+')
    return parser.parse_args()


bedSortCmd = ["bedSort", "/dev/stdin", "/dev/stdout"]

def createInBed(inBeds, tmpBedFh):
    with pipettor.Popen([bedSortCmd], "w", stdout=tmpBedFh) as outBedFh:
        for inBed in inBeds:
            with fileOps.opengz(inBed) as inBedFh:
                shutil.copyfileobj(inBedFh, outBedFh)

def bedToBigBed(tmpBed, bigBedOut, bedType, asFile, extraIndex, genomeTwoBit):
    cmd = ["bedToBigBed", "-type=" + bedType, "-tab", "-sizesIs2Bit"]
    if asFile is not None:
        cmd += ["-as=" + asFile]
    if extraIndex is not None:
        cmd += ["-extraIndex=" + extraIndex]
    cmd += [tmpBed, genomeTwoBit, bigBedOut]
    pipettor.run(cmd)

def buildBigBed(inBeds, bigBedOut, keep, bedType, asFile, extraIndex, genomeTwoBit):
    with tempfile.NamedTemporaryFile(delete=not keep) as tmpBedFh:
        if keep:
            print("keeping temporary bed:", tmpBedFh.name, file=sys.stderr)
        createInBed(inBeds, tmpBedFh)
        bedToBigBed(tmpBedFh.name, bigBedOut, bedType, asFile, extraIndex, genomeTwoBit)

def main(args):
    genomeTwoBit = "/hive/data/genomes/{asm}/{asm}.2bit".format(asm=args.hgdb)
    buildBigBed(args.inBeds, args.bigBedOut, args.keep, args.bedType, args.asFile, args.extraIndex, genomeTwoBit)


main(parseArgs())
