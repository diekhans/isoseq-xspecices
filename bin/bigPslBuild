#!/usr/bin/env python3

import argparse
from os import path as osp
import pipettor
import tempfile
from pycbio.sys import fileOps
from pycbio.tsv import TsvTable, TabFileReader

etcDir = osp.normpath(osp.join(osp.dirname(__file__), "../etc"))

def parseArgs():
    usage = """ buildBig and add columns from TSV from bigPsl to make bigPslWithMeta"""
    parser = argparse.ArgumentParser(description=usage)
    parser.add_argument('metaTsv')
    parser.add_argument('pslIn')
    parser.add_argument('srcCds')
    parser.add_argument('srcFa')
    parser.add_argument('chromSizes')
    parser.add_argument('bigPslOut')
    return parser.parse_args()

def processRec(metaData, rec, outFh):
    qName = rec[3]
    mds = metaData.idx.transId.get(qName)
    if mds is None:
        raise Exception("psl qName not found in metadata: {}".format(qName))
    md = mds[0]
    print(*rec, md.geneId, md.geneName, md.geneType, md.transcriptName, md.transcriptType, sep='\t', file=outFh)

def addMeta(metaData, bigPslIn, bigPslMetaIn):
    with fileOps.opengz(bigPslMetaIn, 'w') as outFh:
        for rec in TabFileReader(bigPslIn):
            processRec(metaData, rec, outFh)

def bigPslToPsl(inPsl, srcCds, srcFa, bigPslIn):
    pipettor.run([["pslToBigPsl", "-cds=" + srcCds, "-fa=" + srcFa, inPsl, "/dev/stdout"],
                  ["sort", "-k1,1", "-k2,2n"]], stdout=bigPslIn)

def bedToBigBed(bigPslIn, asFile, chromSizes, bigPslOut):
    pipettor.run(["bedToBigBed", "-type=bed12+13", "-tab", "-as=" + asFile, bigPslIn, chromSizes, bigPslOut])

def main(opts):
    metaData = TsvTable(opts.metaTsv, multiKeyCols=('transId',))
    with tempfile.NamedTemporaryFile() as bigPslInFh:
        bigPslToPsl(opts.pslIn, opts.srcCds, opts.srcFa, bigPslInFh.name)
        with tempfile.NamedTemporaryFile() as bigPslMetaInFh:
            addMeta(metaData, bigPslInFh.name, bigPslMetaInFh.name)
            with fileOps.AtomicFileCreate(opts.bigPslOut) as bigPslOutTmp:
                bedToBigBed(bigPslMetaInFh.name, osp.join(etcDir, "bigPslWithMeta.as"), opts.chromSizes, bigPslOutTmp)


main(parseArgs())
